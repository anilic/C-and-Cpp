COMPE 225 LAB 6 /2017-2018 Fall
03/11/2017
QUIZ 3
Create a class with the following properties:
Class Name: Storage
Class Purpose: to hold information about a storage type. It should hold the storage’s type (byte, kilobyte, megabyte ‘b’, ‘k’, ‘m’ respectively) and the amount of the storage.
Member Variables: Should have private accessibility.
•	Storage amount : int
•	Storage type (‘b/B’, ‘k/K’, ‘m/M’) : char
•	Hint: You can hold another variable in order to make the calculations. You can create an integer variable typeScore and assign scores to this variable according to the storage type.
Public Member Functions:
•	You should create a parameterized and a default constructor. Default constructor should assing 1 to the amount and ‘b’ to the storage type. Parameterized one should assign parameters to the corresponding variables.
•	Hint: Write a CalculateTypeScore() method in order to calculate the storage score according to the storage type. You can use the following scoring: (You can assign 1 to the types of byte (‘b/B’))
	1 Kilobyte = 1024 Bytes
	1 Megabyte = 1048576 Bytes

•	Overload ==, <, <=, >, >=, != and = operators. All of them should be overloaded according to the storage object storage amount. For example == operator should return true if the participating storage’s store amounts are equal. Same thing applies for all the other comparison operators.
•	Write Getters&Setters for all the variables.
In the main program you should:
1.	Take inputs to create two storage objects (you’re going to take 2 characters and 2 integers).
2.	Create two storage objects with these inputs.
3.	Compare these storage objects with the operators you’ve just overloaded.


Sample Run 1:
Enter the first storage type:
b/B for Btye
k/K for Kilobyte
m/M for Megabyte
M
Enter first storage amount:1

Enter the second storage type:
b/B for Btye
k/K for Kilobyte
m/M for Megabyte
k
Enter second storage amount:1024
Storages are equal.

Sample Run 2:
Enter the first storage type:
b/B for Btye
k/K for Kilobyte
m/M for Megabyte
B
Enter first storage amount:15000

Enter the second storage type:
b/B for Btye
k/K for Kilobyte
m/M for Megabyte
M
Enter second storage amount:3
Second storage is bigger.


-----------------------------------------------------------------------

// Quiz3 - Anıl Çelik.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include <iostream>

using namespace std;

class Storage
{
	private: 
		int amount, temp;
		char type;
	public:
		Storage(int amount = 1, char type = 'c') :amount(amount), type(type) { CalculateTypeScore(); }

		void setValues(int amount, int temp, char type)
		{
			this->amount = amount;
			this->temp = temp;
			this->type = type;
		}

		int getAmount();
		int getTemp();
		char getType();

		friend bool operator== (Storage Data1, Storage Data2);
		friend bool operator!= (Storage Data1, Storage Data2);
		friend bool operator< (Storage Data1, Storage Data2);
		friend bool operator<= (Storage Data1, Storage Data2);
		friend bool operator> (Storage Data1, Storage Data2);
		friend bool operator>= (Storage Data1, Storage Data2);

		int CalculateTypeScore();

};

int Storage::CalculateTypeScore()
{
	if (type == 'k' || type == 'K')
	{
		amount *= 1024;
		return amount;
	}
	else if (type == 'm' || type == 'M')
	{
		amount = amount * 1024 * 1024;
		return amount;
	}
}

int Storage::getAmount()
{
	return amount;
}
int Storage::getTemp()
{
	return temp;
}
char Storage::getType()
{
	return type;
}

bool operator== (Storage Data1, Storage Data2)
{
	return Data1.amount == Data2.amount;
}
bool operator!= (Storage Data1, Storage Data2)
{
	return Data1.amount != Data2.amount;
}
bool operator< (Storage Data1, Storage Data2)
{
	return Data1.amount < Data2.amount;
}
bool operator<= (Storage Data1, Storage Data2)
{
	return Data1.amount <= Data2.amount;
}
bool operator> (Storage Data1, Storage Data2)
{
	return Data1.amount > Data2.amount;
}
bool operator>= (Storage Data1, Storage Data2)
{
	return Data1.amount >= Data2.amount;
}

int main()
{
	int amount1, amount2, temp1, temp2;
	char type1, type2;

	cout << "Enter the first storage type: " << endl;
	cout << "b/B for byte" << endl << "k/K for kilobyte" << endl << "m/M for megabyte" << endl;
	cin >> type1;
	cout << "Enter first storage amount: "; cin >> amount1;

	cout << "Enter the second storage type: " << endl;
	cout << "b/B for byte" << endl << "k/K for kilobyte" << endl << "m/M for megabyte" << endl;
	cin >> type2;
	cout << "Enter second storage amount: "; cin >> amount2;

	Storage Data1(amount1, type1), Data2(amount2, type2);

	if (Data1 == Data2)
	{
		cout << "Storages are equal." << endl;
	}

	else if (Data1 > Data2)
	{
		cout << "First storage is bigger." << endl;
	}

	else if (Data1 < Data2)
	{
		cout << "Second storage is bigger." << endl;
	}

    return 0;
}
